diff --git a/node_modules/react-scripts/config/webpack.config.js b/node_modules/react-scripts/config/webpack.config.js
index 25840d9..3336e2c 100644
--- a/node_modules/react-scripts/config/webpack.config.js
+++ b/node_modules/react-scripts/config/webpack.config.js
@@ -420,6 +420,19 @@ module.exports = function(webpackEnv) {
                       },
                     },
                   ],
+                  [
+                    require.resolve('babel-plugin-transform-imports'),
+                    {
+                      '@material-ui/core': {
+                        'transform': '@material-ui/core/esm/${member}',
+                        'preventFullImport': true
+                      },
+                      '@material-ui/icons': {
+                        'transform': '@material-ui/icons/esm/${member}',
+                        'preventFullImport': true
+                      }
+                    }
+                  ]
                 ],
                 // This is a feature of `babel-loader` for webpack (not Babel itself).
                 // It enables caching results in ./node_modules/.cache/babel-loader/
@@ -648,6 +661,7 @@ module.exports = function(webpackEnv) {
           };
         },
       }),
+      /*
       // Moment.js is an extremely popular library that bundles large locale files
       // by default due to how webpack interprets its code. This is a practical
       // solution that requires the user to opt into importing specific locales.
@@ -672,6 +686,7 @@ module.exports = function(webpackEnv) {
             new RegExp('/[^/?]+\\.[^/]+$'),
           ],
         }),
+      */
       // TypeScript type checking
       useTypeScript &&
         new ForkTsCheckerWebpackPlugin({
diff --git a/node_modules/react-scripts/scripts/build.js b/node_modules/react-scripts/scripts/build.js
index fa30fb0..613371a 100644
--- a/node_modules/react-scripts/scripts/build.js
+++ b/node_modules/react-scripts/scripts/build.js
@@ -109,6 +109,7 @@ checkBrowsers(paths.appPath, isInteractive)
       );
       console.log();
 
+      /*
       const appPackage = require(paths.appPackageJson);
       const publicUrl = paths.publicUrlOrPath;
       const publicPath = config.output.publicPath;
@@ -120,6 +121,7 @@ checkBrowsers(paths.appPath, isInteractive)
         buildFolder,
         useYarn
       );
+      */
     },
     err => {
       const tscCompileOnError = process.env.TSC_COMPILE_ON_ERROR === 'true';
